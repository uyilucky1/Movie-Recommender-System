Content Based Recommender

Every movie has a unique attribute like the producer, the genres, the tags that describes it,The element of these unique attributes can sometiimes intersect between movies, i.e two unique movies can have the same genres and also the same producers or production crew. The approach we followed here is to exploit these intersected similarities in a movie's attributes, and hence make recommendations of similar movies to a user based on their favourite movie's similarity score to the other movies in the database. we tried out three different approaches to see which one would yield the most promising results;

Genres firstly we tried using the genres of a movie: by using the genres we opt to calculate the cosine similarity of the vectorized genres of the movies and subsequently compute the movies that has the highest similarity scores with a reference movie. The similarity score is a single float number that ranges from 0 to 1, with 1 being the highest number.
Tags The dataset has a tags data that indicates the tags given to a movie by users, the tags also has a relevance score which tells us how relevent an assigned tag is to the movie. To use the tags, we set a threshold of 0.9 in the relevance score such that if an assigned tag does not have a relevance score of up to 0.9, it is considered as irrelivant and hence dropped.with this approach we would be sure that the tags used to build the recommender system describes the movie almost perfectly. The other steps are the same as the genres approach.
Combination of Genres and Tags: with this approach, we join the tags and also the genres in a movie to calculate the similarity matrix of that movie to the others.The logic behind this approach is that two movies can have exactly the same set of genres but differ in the tags assigned to them, hence we seek to explore the dissimilarity in the tags to see if the recommender would not only recommend movies based on their genre similarity but also take into account the tags assigned to them.

**Collaborative Recommender**

Collaborative Recommender is a filtering system that works by filtering out items that a user might like based on the similarities the user shares with other users and the items they have rated highly. Our approach here is to compute a similarity matrix using cosine similarities of users and their correspondings ratings of the movies in the movie database. The similarity matrixis a n by n sparse matrix, this is because a single user wouldn't have seen all the movies in the database, and hence we would have a zero value on the matrix where a user intersects with a movie they haven't seen. 

With the similarity matrix computed, we can then predict the ratings a user would assign a movie. The algorithm we used here is the **Single Value Decomposition** or `SVD`, which is a decomposition of a matrix `M` which is a utility matrix of `users`, `items` and the `ratings` assigned by each user to an item.

The Decomposed ratings matrix `M` is a matrix used in the collaborative recommender system with the aim of revealing the latent factors in `M` by minimizing the `RMSE` of the predicted `user-movie` rating score.